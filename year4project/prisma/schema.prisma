datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pets          Pet[]
  animalKeepers AnimalKeeper[]
  forums        Forum[]  // Relationship with Forum model

}

model Pet {
  id          String @id @default(uuid())
  name        String
  breed       String
  description String
  imageUrl    String @db.Text
  inviteCode  String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  animalKeepers AnimalKeeper[]

  @@index([profileId])
}


enum AnimalKeeperRole {
  ADMIN
  GUEST
}

model AnimalKeeper {
  id   String           @id @default(uuid())
  role AnimalKeeperRole @default(GUEST)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  petId String
  pet   Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
  @@index([profileId])
}

model Forum { 
  id        String   @id @default(uuid())
  title     String
  content   String
  description String
  creatorId String   // ID of the profile who created the forum

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator Profile @relation(fields: [creatorId], references: [id]) // Relationship with Profile model

  @@index([creatorId])
}


