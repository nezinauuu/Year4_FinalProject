// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}
generator client {
  provider = "prisma-client-js"
}

model Profile {
  id       String  @id @default(uuid())
  userId   String  @unique
  name     String
  imageUrl String  @db.Text
  email    String  @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pets          Pet[]
  animalKeepers AnimalKeeper[]
  forums        Forum[]
  sentMessages  ChatLog[] // Opposite relation to ChatLog's sender field
}


model Pet {
  id          String @id @default(uuid())
  name        String
  breed       String
  description String
  imageUrl    String @db.Text
  inviteCode  String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  animalKeepers AnimalKeeper[]

  @@index([profileId])
}


enum AnimalKeeperRole {
  ADMIN
  GUEST
}

model AnimalKeeper {
  id   String           @id @default(uuid())
  role AnimalKeeperRole @default(GUEST)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  petId String
  pet   Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
  @@index([profileId])
}

model Forum {
  id        String      @id @default(uuid())
  title     String
  content   String
  creatorId String      // ID of the profile who created the forum

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  creator   Profile     @relation(fields: [creatorId], references: [id]) // Relationship with Profile model
  chatLogs  ChatLog[]   // Relationship with ChatLog model

  @@index([creatorId])
}

model ChatLog {
  id        String   @id @default(uuid())
  message   String
  senderId  String
  forumId   String
  sentAt    DateTime @default(now())

  sender    Profile  @relation(fields: [senderId], references: [id])
  forum     Forum    @relation(fields: [forumId], references: [id])

  @@index([senderId])
  @@index([forumId])
}